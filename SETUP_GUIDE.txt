INSTALLATION PYTHON 3.11 & NODE.JS 22.10

sudo apt update
sudo apt install software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt update
sudo apt install python3.11 python3.11-venv python3.11-dev
sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
sudo update-alternatives --config python3

ATTENTION !

python3 --version
cd /usr/lib/python3/dist-packages
ls -l | grep apt_pkg

ATTENTION !

sudo ln -s apt_pkg.cpython-{your-version-number}-{archi}-linux-gnu.so apt_pkg.so

sudo apt install python3-pip

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

REFRESH TERMINAL

source ~/.nvm/nvm.sh
nvm install 22.10.0
nvm use 22.10.0
nvm alias default 22.10.0
node –version

wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
ou
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh
ou
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-s390x.sh

bash ~/Miniconda3-latest-Linux-x86_64.sh
ou
bash ~/Miniconda3-latest-Linux-aarch64.sh
ou
bash ~/Miniconda3-latest-Linux-s390x.sh

ATTENTION !

OPENWEB UI SETUP

cp -RPp .env.example .env
npm install
npm run dev

OUVRIR UN AUTRE TERMINAL

cd backend
conda create --name genx python=3.11
conda activate genx
pip install -r requirements.txt -U
sh dev.sh

RUN DEV

npm install
npm run dev

cd backend
conda activate genx
sh dev.sh

CORS ISSUE

● To fix the CORS issue when running on localhost, you
  need to either:

  1. Start the backend server properly alongside the
  frontend
  2. Configure your development environment to allow
  cross-origin requests

  The simplest solution is to run the full stack using
  the provided scripts:

  ./run.sh

  If you're developing and want separate
  frontend/backend:

  1. Set the proper CORS_ALLOW_ORIGIN environment
  variable in your backend:
  CORS_ALLOW_ORIGIN="http://localhost:5173"
  ./backend/dev.sh
  2. Or modify Caddyfile.localhost and use it as your
  development proxy:
  caddy run --config Caddyfile.localhost

  This will properly handle the CORS headers between your
   frontend (5173) and backend (8080).

RUN PROD 

Dans Dockerfile, changer la ligne en:
FROM --platform="linux/arm64" node:22-alpine3.20 AS build
ou
FROM --platform="linux/amd64" node:22-alpine3.20 AS build
